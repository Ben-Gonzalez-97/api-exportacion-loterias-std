# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, entidad: str=None, moneda: str=None, fecha_desde: date=None, fecha_hasta: date=None, tipo_loteria: str=None, juego: str=None):  # noqa: E501
        """Metadata - a model defined in Swagger

        :param entidad: The entidad of this Metadata.  # noqa: E501
        :type entidad: str
        :param moneda: The moneda of this Metadata.  # noqa: E501
        :type moneda: str
        :param fecha_desde: The fecha_desde of this Metadata.  # noqa: E501
        :type fecha_desde: date
        :param fecha_hasta: The fecha_hasta of this Metadata.  # noqa: E501
        :type fecha_hasta: date
        :param tipo_loteria: The tipo_loteria of this Metadata.  # noqa: E501
        :type tipo_loteria: str
        :param juego: The juego of this Metadata.  # noqa: E501
        :type juego: str
        """
        self.swagger_types = {
            'entidad': str,
            'moneda': str,
            'fecha_desde': date,
            'fecha_hasta': date,
            'tipo_loteria': str,
            'juego': str
        }

        self.attribute_map = {
            'entidad': 'entidad',
            'moneda': 'moneda',
            'fecha_desde': 'fechaDesde',
            'fecha_hasta': 'fechaHasta',
            'tipo_loteria': 'tipoLoteria',
            'juego': 'juego'
        }
        self._entidad = entidad
        self._moneda = moneda
        self._fecha_desde = fecha_desde
        self._fecha_hasta = fecha_hasta
        self._tipo_loteria = tipo_loteria
        self._juego = juego

    @classmethod
    def from_dict(cls, dikt) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Metadata of this Metadata.  # noqa: E501
        :rtype: Metadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entidad(self) -> str:
        """Gets the entidad of this Metadata.

        Tipo de entidad consultada  # noqa: E501

        :return: The entidad of this Metadata.
        :rtype: str
        """
        return self._entidad

    @entidad.setter
    def entidad(self, entidad: str):
        """Sets the entidad of this Metadata.

        Tipo de entidad consultada  # noqa: E501

        :param entidad: The entidad of this Metadata.
        :type entidad: str
        """
        allowed_values = ["ag", "rc"]  # noqa: E501
        if entidad not in allowed_values:
            raise ValueError(
                "Invalid value for `entidad` ({0}), must be one of {1}"
                .format(entidad, allowed_values)
            )

        self._entidad = entidad

    @property
    def moneda(self) -> str:
        """Gets the moneda of this Metadata.

        Moneda de los valores  # noqa: E501

        :return: The moneda of this Metadata.
        :rtype: str
        """
        return self._moneda

    @moneda.setter
    def moneda(self, moneda: str):
        """Sets the moneda of this Metadata.

        Moneda de los valores  # noqa: E501

        :param moneda: The moneda of this Metadata.
        :type moneda: str
        """
        allowed_values = ["ved", "usd"]  # noqa: E501
        if moneda not in allowed_values:
            raise ValueError(
                "Invalid value for `moneda` ({0}), must be one of {1}"
                .format(moneda, allowed_values)
            )

        self._moneda = moneda

    @property
    def fecha_desde(self) -> date:
        """Gets the fecha_desde of this Metadata.

        Fecha inicial de la consulta  # noqa: E501

        :return: The fecha_desde of this Metadata.
        :rtype: date
        """
        return self._fecha_desde

    @fecha_desde.setter
    def fecha_desde(self, fecha_desde: date):
        """Sets the fecha_desde of this Metadata.

        Fecha inicial de la consulta  # noqa: E501

        :param fecha_desde: The fecha_desde of this Metadata.
        :type fecha_desde: date
        """

        self._fecha_desde = fecha_desde

    @property
    def fecha_hasta(self) -> date:
        """Gets the fecha_hasta of this Metadata.

        Fecha final de la consulta  # noqa: E501

        :return: The fecha_hasta of this Metadata.
        :rtype: date
        """
        return self._fecha_hasta

    @fecha_hasta.setter
    def fecha_hasta(self, fecha_hasta: date):
        """Sets the fecha_hasta of this Metadata.

        Fecha final de la consulta  # noqa: E501

        :param fecha_hasta: The fecha_hasta of this Metadata.
        :type fecha_hasta: date
        """

        self._fecha_hasta = fecha_hasta

    @property
    def tipo_loteria(self) -> str:
        """Gets the tipo_loteria of this Metadata.

        Tipo de lotería consultado  # noqa: E501

        :return: The tipo_loteria of this Metadata.
        :rtype: str
        """
        return self._tipo_loteria

    @tipo_loteria.setter
    def tipo_loteria(self, tipo_loteria: str):
        """Sets the tipo_loteria of this Metadata.

        Tipo de lotería consultado  # noqa: E501

        :param tipo_loteria: The tipo_loteria of this Metadata.
        :type tipo_loteria: str
        """

        self._tipo_loteria = tipo_loteria

    @property
    def juego(self) -> str:
        """Gets the juego of this Metadata.

        Juego específico consultado (null para multijuego)  # noqa: E501

        :return: The juego of this Metadata.
        :rtype: str
        """
        return self._juego

    @juego.setter
    def juego(self, juego: str):
        """Sets the juego of this Metadata.

        Juego específico consultado (null para multijuego)  # noqa: E501

        :param juego: The juego of this Metadata.
        :type juego: str
        """

        self._juego = juego
